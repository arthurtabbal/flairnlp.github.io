"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2011],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(s,".").concat(m)]||u[m]||k[m]||a;return n?i.createElement(d,l(l({ref:t},c),{},{components:n})):i.createElement(d,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>k,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5,description:"How to do entity linking in Flair"},l="Tagging and linking entities",o={unversionedId:"tutorial-basics/entity-linking",id:"tutorial-basics/entity-linking",title:"Tagging and linking entities",description:"How to do entity linking in Flair",source:"@site/docs/tutorial-basics/entity-linking.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/entity-linking",permalink:"/docs/tutorial-basics/entity-linking",draft:!1,editUrl:"https://github.com/flairNLP/flairnlp.github.io/edit/source/docs/tutorial-basics/entity-linking.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"How to do entity linking in Flair"},sidebar:"tutorialSidebar",previous:{title:"Tagging sentiment",permalink:"/docs/tutorial-basics/tagging-sentiment"},next:{title:"Tagging parts-of-speech",permalink:"/docs/tutorial-basics/part-of-speech-tagging"}},s={},p=[{value:"Example 1: Entity linking on a single sentence",id:"example-1-entity-linking-on-a-single-sentence",level:2},{value:"Example 2: Entity linking on a text document (multiple sentences)",id:"example-2-entity-linking-on-a-text-document-multiple-sentences",level:2}],c={toc:p},u="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tagging-and-linking-entities"},"Tagging and linking entities"),(0,r.kt)("p",null,"As of Flair 0.12 we ship an ",(0,r.kt)("strong",{parentName:"p"},"experimental entity linker")," trained on the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/flairNLP/zelda"},"Zelda dataset"),". The linker does not only\ntag entities, but also attempts to link each entity to the corresponding Wikipedia URL if one exists. "),(0,r.kt)("h2",{id:"example-1-entity-linking-on-a-single-sentence"},"Example 1: Entity linking on a single sentence"),(0,r.kt)("p",null,"To illustrate, let's use the example sentence \"",(0,r.kt)("em",{parentName:"p"},"Kirk and Spock met on the Enterprise."),'":'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.nn import Classifier\nfrom flair.data import Sentence\n\n# load the model\ntagger = Classifier.load('linker')\n\n# make a sentence\nsentence = Sentence('Kirk and Spock met on the Enterprise.')\n\n# predict entity links\ntagger.predict(sentence)\n\n# iterate over predicted entities and print\nfor label in sentence.get_labels():\n    print(label)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-coffeescript"},'Span[0:1]: "Kirk" \u2192 James_T._Kirk (0.9969)\nSpan[2:3]: "Spock" \u2192 Spock (0.9971)\nSpan[6:7]: "Enterprise" \u2192 USS_Enterprise_(NCC-1701-D) (0.975)\n')),(0,r.kt)("p",null,"As we can see, the linker can resolve that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'"Kirk" refers to the entity "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/James_T._Kirk"},"James","_","T.","_","Kirk"),'"\n'),(0,r.kt)("li",{parentName:"ul"},'"Spock" refers to "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Spock"},"Spock"),'" ',(0,r.kt)("em",{parentName:"li"},"(ok, that one was easy)")),(0,r.kt)("li",{parentName:"ul"},'"Enterprise" refers to the "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/USS_Enterprise_(NCC-1701-D)"},"USS","_","Enterprise","_","(NCC-1701-D)"),'"\n')),(0,r.kt)("p",null,"Not bad, eh? However, that last prediction is not quite correct as Star Trek fans will know. Entity linking is a hard task and we are working to improve the accuracy of our model."),(0,r.kt)("h2",{id:"example-2-entity-linking-on-a-text-document-multiple-sentences"},"Example 2: Entity linking on a text document (multiple sentences)"),(0,r.kt)("p",null,"Entity linking typically works best when applied to a whole document instead of only a single sentence. "),(0,r.kt)("p",null,"To illustrate how this works, let's use the following short text: \"",(0,r.kt)("em",{parentName:"p"},"Bayern played against Barcelona. The match took place in Barcelona."),'"'),(0,r.kt)("p",null,"In this case, split the text into sentences and pass a list of ",(0,r.kt)("inlineCode",{parentName:"p"},"Sentence")," objects to the ",(0,r.kt)("inlineCode",{parentName:"p"},".predict()")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.nn import Classifier\nfrom flair.splitter import SegtokSentenceSplitter\n\n# example text with many sentences\ntext = \"Bayern played against Barcelona. The match took place in Barcelona.\"\n\n# initialize sentence splitter\nsplitter = SegtokSentenceSplitter()\n\n# use splitter to split text into list of sentences\nsentences = splitter.split(text)\n\n# predict tags for sentences\ntagger = Classifier.load('linker')\ntagger.predict(sentences)\n\n# iterate through sentences and print predicted labels\nfor sentence in sentences:\n    print(sentence)\n")),(0,r.kt)("p",null,"This should print: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence[5]: "Bayern played against Barcelona." \u2192 ["Bayern"/FC_Bayern_Munich, "Barcelona"/FC_Barcelona]\nSentence[7]: "The match took place in Barcelona." \u2192 ["Barcelona"/Barcelona]\n')),(0,r.kt)("p",null,"As we can see, the linker can resolve that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'"Bayern" refers to the soccer club "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/FC_Bayern_Munich"},"FC Bayern Munich"),'"\n'),(0,r.kt)("li",{parentName:"ul"},'the first mention of "Barcelona" refers to the soccer club "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/FC_Barcelona"},"FC Barcelona"),'"\n'),(0,r.kt)("li",{parentName:"ul"},'the second mention of "Barcelona" refers to the city of "',(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Barcelona"},"Barcelona"),'"')))}k.isMDXComponent=!0}}]);