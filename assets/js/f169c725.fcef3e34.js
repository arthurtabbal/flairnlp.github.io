"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8359],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),s=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(o.Provider,{value:e},t.children)},m="mdxType",N={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),m=s(a),u=r,k=m["".concat(o,".").concat(u)]||m[u]||N[u]||l;return a?n.createElement(k,i(i({ref:e},d),{},{components:a})):n.createElement(k,i({ref:e},d))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p[m]="string"==typeof t?t:r,i[1]=p;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8931:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>N,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const l={sidebar_position:4,description:"Load a prepared dataset"},i="How to load a prepared dataset",p={unversionedId:"tutorial-training/how-to-load-prepared-dataset",id:"tutorial-training/how-to-load-prepared-dataset",title:"How to load a prepared dataset",description:"Load a prepared dataset",source:"@site/docs/tutorial-training/how-to-load-prepared-dataset.md",sourceDirName:"tutorial-training",slug:"/tutorial-training/how-to-load-prepared-dataset",permalink:"/docs/tutorial-training/how-to-load-prepared-dataset",draft:!1,editUrl:"https://github.com/flairNLP/flairnlp.github.io/edit/source/docs/tutorial-training/how-to-load-prepared-dataset.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Load a prepared dataset"},sidebar:"tutorialSidebar",previous:{title:"Training vs fine-tuning",permalink:"/docs/tutorial-training/train-vs-fine-tune"},next:{title:"How to load a custom datasetus",permalink:"/docs/tutorial-training/how-to-load-custom-dataset"}},o={},s=[{value:"The Corpus Object",id:"the-corpus-object",level:2},{value:"Helper functions",id:"helper-functions",level:3},{value:"Creating label dictionaries",id:"creating-label-dictionaries",level:3},{value:"Dictionaries for other label types",id:"dictionaries-for-other-label-types",level:4},{value:"Dictionaries for other corpora types",id:"dictionaries-for-other-corpora-types",level:4},{value:"The MultiCorpus Object",id:"the-multicorpus-object",level:3},{value:"Datasets included in Flair",id:"datasets-included-in-flair",level:2},{value:"Named Entity Recognition",id:"named-entity-recognition",level:4},{value:"Biomedical Named Entity Recognition",id:"biomedical-named-entity-recognition",level:4},{value:"Entity Linking",id:"entity-linking",level:4},{value:"Relation Extraction",id:"relation-extraction",level:4},{value:"GLUE Benchmark",id:"glue-benchmark",level:4},{value:"Universal Proposition Banks",id:"universal-proposition-banks",level:4},{value:"Universal Dependency Treebanks",id:"universal-dependency-treebanks",level:4},{value:"Text Classification",id:"text-classification",level:4},{value:"Text Regression",id:"text-regression",level:4},{value:"Other Sequence Labeling",id:"other-sequence-labeling",level:4},{value:"Experimental: Similarity Learning",id:"experimental-similarity-learning",level:4}],d={toc:s},m="wrapper";function N(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-load-a-prepared-dataset"},"How to load a prepared dataset"),(0,r.kt)("p",null,"This part of the tutorial shows how you can load a corpus for training a model. "),(0,r.kt)("h2",{id:"the-corpus-object"},"The Corpus Object"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," represents a dataset that you use to train a model. It consists of a list of ",(0,r.kt)("inlineCode",{parentName:"p"},"train")," sentences,\na list of ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," sentences, and a list of ",(0,r.kt)("inlineCode",{parentName:"p"},"test")," sentences, which correspond to the training, validation and testing\nsplit during model training."),(0,r.kt)("p",null,"The following example snippet instantiates the Universal Dependency Treebank for English as a corpus object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flair.datasets\ncorpus = flair.datasets.UD_ENGLISH()\n")),(0,r.kt)("p",null,"The first time you call this snippet, it triggers a download of the Universal Dependency Treebank for English onto your\nhard drive. It then reads the train, test and dev splits into the ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," which it returns. Check the length of\nthe three splits to see how many Sentences are there:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# print the number of Sentences in the train split\nprint(len(corpus.train))\n\n# print the number of Sentences in the test split\nprint(len(corpus.test))\n\n# print the number of Sentences in the dev split\nprint(len(corpus.dev))\n")),(0,r.kt)("p",null,"You can also access the Sentence objects in each split directly. For instance, let us look at the first Sentence in\nthe training split of the English UD:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# get the first Sentence in the training split\nsentence = corpus.test[0]\n\n# print with all annotations\nprint(sentence)\n\n# print only with POS annotations (better readability)\nprint(sentence.to_tagged_string('pos'))\n")),(0,r.kt)("p",null,"The sentence is fully tagged with syntactic and morphological information. With the latter line,\nyou print out only the POS tags:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence: "What if Google Morphed Into GoogleOS ?" \u2192 ["What"/WP, "if"/IN, "Google"/NNP, "Morphed"/VBD, "Into"/IN, "GoogleOS"/NNP, "?"/.]\n')),(0,r.kt)("p",null,"So the corpus is tagged and ready for training."),(0,r.kt)("h3",{id:"helper-functions"},"Helper functions"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," contains a bunch of useful helper functions.\nFor instance, you can downsample the data by calling ",(0,r.kt)("inlineCode",{parentName:"p"},"downsample()")," and passing a ratio. So, if you normally get a\ncorpus like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flair.datasets\ncorpus = flair.datasets.UD_ENGLISH()\n")),(0,r.kt)("p",null,"then you can downsample the corpus, simply like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import flair.datasets\ndownsampled_corpus = flair.datasets.UD_ENGLISH().downsample(0.1)\n")),(0,r.kt)("p",null,"If you print both corpora, you see that the second one has been downsampled to 10% of the data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'print("--- 1 Original ---")\nprint(corpus)\n\nprint("--- 2 Downsampled ---")\nprint(downsampled_corpus)\n')),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"--- 1 Original ---\nCorpus: 12543 train + 2002 dev + 2077 test sentences\n\n--- 2 Downsampled ---\nCorpus: 1255 train + 201 dev + 208 test sentences\n")),(0,r.kt)("h3",{id:"creating-label-dictionaries"},"Creating label dictionaries"),(0,r.kt)("p",null,'For many learning tasks you need to create a "dictionary" that contains all the labels you want to predict.\nYou can generate this dictionary directly out of the ',(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," by calling the method ",(0,r.kt)("inlineCode",{parentName:"p"},"make_label_dictionary"),"\nand passing the desired ",(0,r.kt)("inlineCode",{parentName:"p"},"label_type"),"."),(0,r.kt)("p",null,"For instance, the UD_ENGLISH corpus instantiated above has multiple layers of annotation like regular\nPOS tags ('pos'), universal POS tags ('upos'), morphological tags ('tense', 'number'..) and so on.\nCreate label dictionaries for universal POS tags by passing ",(0,r.kt)("inlineCode",{parentName:"p"},"label_type='upos'")," like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# create label dictionary for a Universal Part-of-Speech tagging task\nupos_dictionary = corpus.make_label_dictionary(label_type='upos')\n\n# print dictionary\nprint(upos_dictionary)\n")),(0,r.kt)("p",null,"This will print out the created dictionary:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"Dictionary with 17 tags: PROPN, PUNCT, ADJ, NOUN, VERB, DET, ADP, AUX, PRON, PART, SCONJ, NUM, ADV, CCONJ, X, INTJ, SYM\n")),(0,r.kt)("h4",{id:"dictionaries-for-other-label-types"},"Dictionaries for other label types"),(0,r.kt)("p",null,"If you don't know the label types in a corpus, just call ",(0,r.kt)("inlineCode",{parentName:"p"},"make_label_dictionary")," with\nany random label name (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"corpus.make_label_dictionary(label_type='abcd')"),"). This will print\nout statistics on all label types in the corpus:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"The corpus contains the following label types: 'lemma' (in 12543 sentences), 'upos' (in 12543 sentences), 'pos' (in 12543 sentences), 'dependency' (in 12543 sentences), 'number' (in 12036 sentences), 'verbform' (in 10122 sentences), 'prontype' (in 9744 sentences), 'person' (in 9381 sentences), 'mood' (in 8911 sentences), 'tense' (in 8747 sentences), 'degree' (in 7148 sentences), 'definite' (in 6851 sentences), 'case' (in 6486 sentences), 'gender' (in 2824 sentences), 'numtype' (in 2771 sentences), 'poss' (in 2516 sentences), 'voice' (in 1085 sentences), 'typo' (in 399 sentences), 'extpos' (in 185 sentences), 'abbr' (in 168 sentences), 'reflex' (in 98 sentences), 'style' (in 31 sentences), 'foreign' (in 5 sentences)\n")),(0,r.kt)("p",null,"This means that you can create dictionaries for any of these label types for the UD_ENGLISH corpus. Let's create dictionaries for regular part of speech tags\nand a morphological number tagging task:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# create label dictionary for a regular POS tagging task\npos_dictionary = corpus.make_label_dictionary(label_type='pos')\n\n# create label dictionary for a morphological number tagging task\ntense_dictionary = corpus.make_label_dictionary(label_type='number')\n")),(0,r.kt)("p",null,"If you print these dictionaries, you will find that the POS dictionary contains 50 tags and the number dictionary only 2 for this corpus (singular and plural)."),(0,r.kt)("h4",{id:"dictionaries-for-other-corpora-types"},"Dictionaries for other corpora types"),(0,r.kt)("p",null,"The method ",(0,r.kt)("inlineCode",{parentName:"p"},"make_label_dictionary")," can be used for any corpus, including text classification corpora:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# create label dictionary for a text classification task\ncorpus = flair.datasets.TREC_6()\ncorpus.make_label_dictionary('question_class')\n")),(0,r.kt)("h3",{id:"the-multicorpus-object"},"The MultiCorpus Object"),(0,r.kt)("p",null,"If you want to train multiple tasks at once, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"MultiCorpus")," object.\nTo initiate the ",(0,r.kt)("inlineCode",{parentName:"p"},"MultiCorpus")," you first need to create any number of ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," objects. Afterwards, you can pass\na list of ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"MultiCorpus")," object. For instance, the following snippet loads a combination corpus\nconsisting of the English, German and Dutch Universal Dependency Treebanks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"english_corpus = flair.datasets.UD_ENGLISH()\ngerman_corpus = flair.datasets.UD_GERMAN()\ndutch_corpus = flair.datasets.UD_DUTCH()\n\n# make a multi corpus consisting of three UDs\nfrom flair.data import MultiCorpus\nmulti_corpus = MultiCorpus([english_corpus, german_corpus, dutch_corpus])\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"MultiCorpus")," inherits from ",(0,r.kt)("inlineCode",{parentName:"p"},"Corpus"),", so you can use it like any other corpus to train your models."),(0,r.kt)("h2",{id:"datasets-included-in-flair"},"Datasets included in Flair"),(0,r.kt)("p",null,"Flair supports many datasets out of the box. It automatically downloads and sets up the\ndata the first time you call the corresponding constructor ID."),(0,r.kt)("p",null,"The following datasets are supported:"),(0,r.kt)("h4",{id:"named-entity-recognition"},"Named Entity Recognition"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'CONLL_03'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL-03")," 4-class NER (requires manual download)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'CONLL_03_GERMAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL-03")," 4-class NER (requires manual download)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'CONLL_03_DUTCH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Dutch"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL-03")," 4-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'CONLL_03_SPANISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Spanish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL-03")," 4-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'ONTONOTES'"),(0,r.kt)("td",{parentName:"tr",align:null},"Arabic, English, Chinese"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://paperswithcode.com/dataset/ontonotes-5-0/"},"Ontonotes")," 18-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'FEWNERD'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://ningding97.github.io/fewnerd/"},"FewNERD")," 66-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ARABIC_ANER'"),(0,r.kt)("td",{parentName:"tr",align:null},"Arabic"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://curtis.ml.cmu.edu/w/courses/index.php/ANERcorp"},"Arabic Named Entity Recognition Corpus")," 4-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ARABIC_AQMAR'"),(0,r.kt)("td",{parentName:"tr",align:null},"Arabic"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://www.cs.cmu.edu/~ark/AQMAR/"},"American and Qatari Modeling of Arabic")," 4-class NER (modified)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_BASQUE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Basque"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://ixa2.si.ehu.eus/eiec/"},"NER dataset for Basque"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_CHINESE_WEIBO'"),(0,r.kt)("td",{parentName:"tr",align:null},"Chinese"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://paperswithcode.com/sota/chinese-named-entity-recognition-on-weibo-ner/"},"Weibo NER corpus"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_DANISH_DANE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Danish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/alexandrainst/danlp/blob/master/docs/datasets.md#danish-dependency-treebank"},"DaNE dataset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_MOVIE_SIMPLE'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://groups.csail.mit.edu/sls/downloads/movie/"},"NER dataset for movie reviews")," - simple NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_MOVIE_COMPLEX'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://groups.csail.mit.edu/sls/downloads/movie/"},"NER dataset for movie reviews")," - complex NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_PERSON'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/das-sudeshna/genid"},"PERSON_NER")," NER with person names")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_RESTAURANT'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://groups.csail.mit.edu/sls/downloads/restaurant/"},"NER dataset for restaurant reviews"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_SEC_FILLINGS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/juand-r/entity-recognition-datasets"},"SEC-fillings")," with 4-class NER labels from (Alvarado et al, 2015)","[https://aclanthology.org/U15-1010/]"," here")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_STACKOVERFLOW'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"NER on StackOverflow posts")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_TWITTER'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/aritter/twitter_nlp/"},"Twitter NER dataset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_WIKIGOLD'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/juand-r/entity-recognition-datasets/tree/master/data/wikigold"},"Wikigold")," a manually annotated collection of Wikipedia text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_WNUT_2020'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/jeniyat/WNUT_2020_NER"},"WNUT-20")," named entity extraction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ENGLISH_WEBPAGES'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"4-class NER on web pages from ",(0,r.kt)("a",{parentName:"td",href:"https://aclanthology.org/W09-1119/"},"Ratinov and Roth (2009)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_FINNISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Finnish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mpsilfve/finer-data"},"Finer-data"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_GERMAN_BIOFID'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.aclweb.org/anthology/K19-1081/"},"CoNLL-03")," Biodiversity literature NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_GERMAN_EUROPARL'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://nlpado.de/~sebastian/software/ner_german.shtml"},"German Europarl dataset")," NER in German EU parliament speeches")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_GERMAN_GERMEVAL'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://sites.google.com/site/germeval2014ner/data/"},"GermEval 14 NER")," corpus")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_GERMAN_LEGAL'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/elenanereiss/Legal-Entity-Recognition"},"Legal Entity Recognition")," NER in German Legal Documents")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_GERMAN_POLITICS'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.thomas-zastrow.de/nlp/"},"NEMGP")," corpus")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_HIPE_2022'"),(0,r.kt)("td",{parentName:"tr",align:null},"5 languages"),(0,r.kt)("td",{parentName:"tr",align:null},"NER dataset for ",(0,r.kt)("a",{parentName:"td",href:"https://hipe-eval.github.io/HIPE-2022/"},"HIPE-2022")," (Identifying Historical People, Places and other Entities)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_HUNGARIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Hungarian"),(0,r.kt)("td",{parentName:"tr",align:null},"NER on Hungarian business news")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_ICELANDIC'"),(0,r.kt)("td",{parentName:"tr",align:null},"Icelandic"),(0,r.kt)("td",{parentName:"tr",align:null},"NER on Icelandic")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_JAPANESE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Japanese"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/Hironsan/IOB2Corpus"},"Japanese NER")," dataset automatically generated from Wikipedia")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_MASAKHANE'"),(0,r.kt)("td",{parentName:"tr",align:null},"10 languages"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/masakhane-io/masakhane-ner"},"MasakhaNER: Named Entity Recognition for African Languages")," corpora")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_SWEDISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Swedish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/klintan/swedish-ner-corpus/"},"Swedish Spraakbanken NER")," 4-class NER")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_TURKU'"),(0,r.kt)("td",{parentName:"tr",align:null},"Finnish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/TurkuNLP/turku-ner-corpus"},"TURKU_NER")," NER corpus created by the Turku NLP Group, University of Turku, Finland")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_UKRAINIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Ukrainian"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/lang-uk/flair-ner"},"lang-uk")," NER corpus created by the ",(0,r.kt)("a",{parentName:"td",href:"https://lang.org.ua/en/"},"Lang-uk community"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_MULTI_WIKIANN'"),(0,r.kt)("td",{parentName:"tr",align:null},"282 languages"),(0,r.kt)("td",{parentName:"tr",align:null},"Gigantic ",(0,r.kt)("a",{parentName:"td",href:"https://elisa-ie.github.io/wikiann/"},"corpus for cross-lingual NER derived from Wikipedia"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_MULTI_WIKINER'"),(0,r.kt)("td",{parentName:"tr",align:null},"8 languages"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/dice-group/FOX/tree/master/input/Wikiner"},"WikiNER")," NER dataset automatically generated from Wikipedia (English, German, French, Italian, Spanish, Portuguese, Polish, Russian)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NER_MULTI_XTREME'"),(0,r.kt)("td",{parentName:"tr",align:null},"176 languages"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/google-research/xtreme"},"Xtreme")," corpus by Google Research for cross-lingual NER consisting of datasets of a total of 176 languages")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'WNUT_17'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://noisy-text.github.io/2017/files/"},"WNUT-17")," emerging entity detection")))),(0,r.kt)("h4",{id:"biomedical-named-entity-recognition"},"Biomedical Named Entity Recognition"),(0,r.kt)("p",null,"We support 31 biomedical NER datasets, listed"),(0,r.kt)("h4",{id:"entity-linking"},"Entity Linking"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_ENGLISH_AIDA'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.mpi-inf.mpg.de/departments/databases-and-information-systems/research/ambiverse-nlu/aida/downloads"},"AIDA CoNLL-YAGO Entity Linking corpus")," on the CoNLL-03 corpus")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_ENGLISH_AQUAINT'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Aquaint Entity Linking corpus introduced in ",(0,r.kt)("a",{parentName:"td",href:"https://www.cms.waikato.ac.nz/~ihw/papers/08-DNM-IHW-LearningToLinkWithWikipedia.pdf"},"Milne and Witten (2008)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_ENGLISH_IITB'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"ITTB Entity Linking corpus introduced in ",(0,r.kt)("a",{parentName:"td",href:"https://dl.acm.org/doi/10.1145/1557019.1557073"},"Sayali et al. (2009)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_ENGLISH_REDDIT'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Reddit Entity Linking corpus introduced in ",(0,r.kt)("a",{parentName:"td",href:"https://arxiv.org/abs/2101.01228v2"},"Botzer et al. (2021)")," (only gold annotations)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_ENGLISH_TWEEKI'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"ITTB Entity Linking corpus introduced in ",(0,r.kt)("a",{parentName:"td",href:"https://aclanthology.org/2020.wnut-1.29.pdf"},"Harandizadeh and Singh (2020)"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEL_GERMAN_HIPE'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://impresso.github.io/CLEF-HIPE-2020/"},"HIPE")," Entity Linking corpus for historical German as a ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/stefan-it/clef-hipe"},"sentence-segmented version"))))),(0,r.kt)("h4",{id:"relation-extraction"},"Relation Extraction"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'RE_ENGLISH_CONLL04'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/bekou/multihead_joint_entity_relation_extraction/tree/master/data/CoNLL04"},"CoNLL-04")," Relation Extraction")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'RE_ENGLISH_SEMEVAL2010'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://aclanthology.org/S10-1006.pdf"},"SemEval-2010 Task 8")," on Multi-Way Classification of Semantic Relations Between Pairs of Nominals")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'RE_ENGLISH_TACRED'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://nlp.stanford.edu/projects/tacred/"},"TAC Relation Extraction Dataset")," with 41 relations (download required)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'RE_ENGLISH_DRUGPROT'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://zenodo.org/record/5119892#.YSdSaVuxU5k/"},"DrugProt corpus: Biocreative VII Track 1")," - drug and chemical-protein interactions")))),(0,r.kt)("h4",{id:"glue-benchmark"},"GLUE Benchmark"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_COLA'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The Corpus of Linguistic Acceptability from GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_MNLI'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The Multi-Genre Natural Language Inference Corpus from the GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_RTE'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The RTE task from the GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_QNLI'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The Stanford Question Answering Dataset formated as NLI task from the GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_WNLI'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The Winograd Schema Challenge formated as NLI task from the GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_MRPC'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The MRPC task from GLUE benchmark")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GLUE_QQP'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The Quora Question Pairs dataset where the task is to determine whether a pair of questions are semantically equivalent")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SUPERGLUE_RTE'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The RTE task from the SuperGLUE benchmark")))),(0,r.kt)("h4",{id:"universal-proposition-banks"},"Universal Proposition Banks"),(0,r.kt)("p",null,"We also support loading the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/System-T/UniversalPropositions"},"Universal Proposition Banks"),"\nfor the purpose of training multilingual frame detection systems."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_CHINESE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Chinese"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_Chinese"},"Chinese"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_ENGLISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_English-EWT"},"English"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_FINNISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Finnish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_Finnish"},"Finnish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_FRENCH'"),(0,r.kt)("td",{parentName:"tr",align:null},"French"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_French"},"French"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_GERMAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_German"},"German"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_ITALIAN',"),(0,r.kt)("td",{parentName:"tr",align:null},"Italian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_Italian"},"Italian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_SPANISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Spanish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_Spanish"},"Spanish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UP_SPANISH_ANCORA'"),(0,r.kt)("td",{parentName:"tr",align:null},"Spanish (Ancora Corpus)"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Propositions for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/System-T/UniversalPropositions/tree/master/UP_Spanish-AnCora"},"Spanish"))))),(0,r.kt)("h4",{id:"universal-dependency-treebanks"},"Universal Dependency Treebanks"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_ARABIC'"),(0,r.kt)("td",{parentName:"tr",align:null},"Arabic"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Arabic-PADT"},"Arabic"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_BASQUE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Basque"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Basque-BDT"},"Basque"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_BULGARIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Bulgarian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Bulgarian-BTB"},"Bulgarian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_CATALAN',"),(0,r.kt)("td",{parentName:"tr",align:null},"Catalan"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Catalan-AnCora"},"Catalan"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_CHINESE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Chinese"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Chinese-GSD"},"Chinese"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_CHINESE_KYOTO'"),(0,r.kt)("td",{parentName:"tr",align:null},"Classical Chinese"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for Classical ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Classical_Chinese-Kyoto/tree/dev"},"Chinese"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_CROATIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Croatian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Croatian-SET"},"Croatian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_CZECH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Czech"),(0,r.kt)("td",{parentName:"tr",align:null},"Very large Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Czech-PDT"},"Czech"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_DANISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Danish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Danish-DDT"},"Danish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_DUTCH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Dutch"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Dutch-Alpino"},"Dutch"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_ENGLISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_English-EWT"},"English"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_FINNISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Finnish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Finnish-TDT"},"Finnish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_FRENCH'"),(0,r.kt)("td",{parentName:"tr",align:null},"French"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_French-GSD"},"French"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_GERMAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_German-GSD"},"German"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_GERMAN-HDT'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Very large Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_German-HDT"},"German"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_HEBREW'"),(0,r.kt)("td",{parentName:"tr",align:null},"Hebrew"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Hebrew-HTB"},"Hebrew"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_HINDI'"),(0,r.kt)("td",{parentName:"tr",align:null},"Hindi"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Hindi-HDTB"},"Hindi"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_INDONESIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Indonesian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Indonesian-GSD"},"Indonesian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_ITALIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Italian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Italian-ISDT"},"Italian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_JAPANESE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Japanese"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Japanese-GSD"},"Japanese"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_KOREAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Korean"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Korean-Kaist"},"Korean"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_NORWEGIAN',"),(0,r.kt)("td",{parentName:"tr",align:null},"Norwegian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Norwegian-Bokmaal"},"Norwegian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_PERSIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Persian / Farsi"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Persian-Seraji"},"Persian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_POLISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Polish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Polish-LFG"},"Polish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_PORTUGUESE'"),(0,r.kt)("td",{parentName:"tr",align:null},"Portuguese"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Portuguese-Bosque"},"Portuguese"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_ROMANIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Romanian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Romanian-RRT"},"Romanian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_RUSSIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Russian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Russian-SynTagRus"},"Russian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_SERBIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Serbian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Serbian-SET"},"Serbian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_SLOVAK'"),(0,r.kt)("td",{parentName:"tr",align:null},"Slovak"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Slovak-SNK"},"Slovak"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_SLOVENIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Slovenian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Slovenian-SSJ"},"Slovenian"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_SPANISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Spanish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Spanish-GSD"},"Spanish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_SWEDISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Swedish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Swedish-Talbanken"},"Swedish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_TURKISH'"),(0,r.kt)("td",{parentName:"tr",align:null},"Turkish"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Turkish-IMST"},"Tturkish"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'UD_UKRAINIAN'"),(0,r.kt)("td",{parentName:"tr",align:null},"Ukrainian"),(0,r.kt)("td",{parentName:"tr",align:null},"Universal Dependency Treebank for ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/UniversalDependencies/UD_Ukrainian-IU"},"Ukrainian"))))),(0,r.kt)("h4",{id:"text-classification"},"Text Classification"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'AMAZON_REVIEWS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://nijianmo.github.io/amazon/index.html/"},"Amazon product reviews")," dataset with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'COMMUNICATIVE_FUNCTIONS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/Alab-NII/FECFevalDataset"},"Communicative functions")," of sentences in scholarly papers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GERMEVAL_2018_OFFENSIVE_LANGUAGE'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Offensive language detection for German")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'GO_EMOTIONS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/google-research/google-research/tree/master/goemotions"},"GoEmotions dataset")," Reddit comments labeled with 27 emotions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'IMDB'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://ai.stanford.edu/~amaas/data/sentiment/"},"IMDB")," dataset of movie reviews with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'NEWSGROUPS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The popular ",(0,r.kt)("a",{parentName:"td",href:"http://qwone.com/~jason/20Newsgroups/"},"20 newsgroups")," classification dataset")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'YAHOO_ANSWERS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://course.fast.ai/datasets#nlp"},"10 largest main categories")," from the Yahoo! Answers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTIMENT_140'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"http://help.sentiment140.com/for-students/"},"Tweets dataset")," with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_CR'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Customer reviews dataset of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval")," with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_MR'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Movie reviews dataset of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval")," with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_SUBJ'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Subjectivity dataset of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_MPQA'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Opinion-polarity dataset of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval")," with opinion-polarity annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_SST_BINARY'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Stanford sentiment treebank dataset of of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval")," with sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'SENTEVAL_SST_GRANULAR'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Stanford sentiment treebank dataset of of ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/facebookresearch/SentEval"},"SentEval")," with fine-grained sentiment annotation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'TREC_6', 'TREC_50'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"http://cogcomp.org/Data/QA/QC/"},"TREC")," question classification dataset")))),(0,r.kt)("h4",{id:"text-regression"},"Text Regression"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'WASSA_ANGER'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://competitions.codalab.org/competitions/16380#learn_the_details"},"WASSA")," emotion-intensity detection challenge (anger)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'WASSA_FEAR'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://competitions.codalab.org/competitions/16380#learn_the_details"},"WASSA")," emotion-intensity detection challenge (fear)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'WASSA_JOY'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://competitions.codalab.org/competitions/16380#learn_the_details"},"WASSA")," emotion-intensity detection challenge (joy)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'WASSA_SADNESS'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"https://competitions.codalab.org/competitions/16380#learn_the_details"},"WASSA")," emotion-intensity detection challenge (sadness)")))),(0,r.kt)("h4",{id:"other-sequence-labeling"},"Other Sequence Labeling"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'CONLL_2000'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Syntactic chunking with ",(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2000/chunking/"},"CoNLL-2000"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'BIOSCOPE'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Negation and speculation scoping wih ",(0,r.kt)("a",{parentName:"td",href:"https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-9-S11-S9/"},"BioScope")," biomedical texts annotated for uncertainty, negation and their scopes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'KEYPHRASE_INSPEC'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Keyphrase dectection with ",(0,r.kt)("a",{parentName:"td",href:"https://www.aclweb.org/anthology/W03-1028"},"INSPEC")," original corpus (2000 docs) from INSPEC database, adapted by ",(0,r.kt)("a",{parentName:"td",href:"https://arxiv.org/abs/1910.08840"},"midas-research"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'KEYPHRASE_SEMEVAL2017'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Keyphrase dectection with ",(0,r.kt)("a",{parentName:"td",href:"https://arxiv.org/abs/1704.02853"},"SEMEVAL2017")," dataset (500 docs) from ScienceDirect, adapted by ",(0,r.kt)("a",{parentName:"td",href:"https://arxiv.org/abs/1910.08840"},"midas-research"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'KEYPHRASE_SEMEVAL2010'"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Keyphrase dectection with ",(0,r.kt)("a",{parentName:"td",href:"https://www.aclweb.org/anthology/S10-1004/"},"SEMEVAL2010")," dataset (~250 docs) from ACM Digital Library, adapted by ",(0,r.kt)("a",{parentName:"td",href:"https://arxiv.org/abs/1910.08840"},"midas-research"))))),(0,r.kt)("h4",{id:"experimental-similarity-learning"},"Experimental: Similarity Learning"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Object"),(0,r.kt)("th",{parentName:"tr",align:null},"Languages"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'FeideggerCorpus'"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/zalandoresearch/feidegger/"},"Feidegger")," dataset fashion images and German-language descriptions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'OpusParallelCorpus'"),(0,r.kt)("td",{parentName:"tr",align:null},"Any language pair"),(0,r.kt)("td",{parentName:"tr",align:null},"Parallel corpora of the ",(0,r.kt)("a",{parentName:"td",href:"http://opus.nlpl.eu/"},"OPUS")," project, currently supports only Tatoeba corpus")))))}N.isMDXComponent=!0}}]);