"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9666],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>c});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),g=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},p=function(t){var e=g(t.components);return a.createElement(o.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=g(n),u=r,c=d["".concat(o,".").concat(u)]||d[u]||m[u]||l;return n?a.createElement(c,i(i({ref:e},p),{},{components:n})):a.createElement(c,i({ref:e},p))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[d]="string"==typeof t?t:r,i[1]=s;for(var g=2;g<l;g++)i[g]=n[g];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2320:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>g});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:3,description:"Named entity recognition (NER) with Flair"},i="Tagging entities",s={unversionedId:"tutorial-basics/tagging-entities",id:"tutorial-basics/tagging-entities",title:"Tagging entities",description:"Named entity recognition (NER) with Flair",source:"@site/docs/tutorial-basics/tagging-entities.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/tagging-entities",permalink:"/docs/tutorial-basics/tagging-entities",draft:!1,editUrl:"https://github.com/flairNLP/flairnlp.github.io/edit/main/docs/tutorial-basics/tagging-entities.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Named entity recognition (NER) with Flair"},sidebar:"tutorialSidebar",previous:{title:"How predictions work",permalink:"/docs/tutorial-basics/how-predictions-work"},next:{title:"Tagging sentiment",permalink:"/docs/tutorial-basics/tagging-sentiment"}},o={},g=[{value:"Tagging entities with our standard model\u200b",id:"tagging-entities-with-our-standard-model",level:2},{value:"Tagging entities with our best model\u200b",id:"tagging-entities-with-our-best-model",level:2},{value:"Tagging entities in non-English text",id:"tagging-entities-in-non-english-text",level:2},{value:"Tagging a German sentence",id:"tagging-a-german-sentence",level:3},{value:"Tagging an Arabic sentence",id:"tagging-an-arabic-sentence",level:3},{value:"Tagging Entities with 18 Classes",id:"tagging-entities-with-18-classes",level:2},{value:"Biomedical Data",id:"biomedical-data",level:2},{value:"List of NER Models",id:"list-of-ner-models",level:2}],p={toc:g},d="wrapper";function m(t){let{components:e,...n}=t;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tagging-entities"},"Tagging entities"),(0,r.kt)("p",null,"This tutorials shows you how to do named entity recognition, showcases various NER models, and provides a full list of all NER models in Flair."),(0,r.kt)("h2",{id:"tagging-entities-with-our-standard-model"},"Tagging entities with our standard model\u200b"),(0,r.kt)("p",null,"Our standard model uses Flair embeddings and was trained over the English CoNLL-03 task and can recognize 4 different entity types. It offers a good tradeoff between accuracy and speed."),(0,r.kt)("p",null,"As example, let's use the sentence \"",(0,r.kt)("em",{parentName:"p"},"George Washington went to Washington."),'": '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.nn import Classifier\nfrom flair.data import Sentence\n\n# load the model\ntagger = Classifier.load('ner')\n\n# make a sentence\nsentence = Sentence('George Washington went to Washington.')\n\n# predict NER tags\ntagger.predict(sentence)\n\n# print sentence with predicted tags\nprint(sentence)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence: "George Washington went to Washington ." \u2192 ["George Washington"/PER, "Washington"/LOC]\n')),(0,r.kt)("p",null,'The printout tells us that two entities are labeled in this sentence: "George Washington" as PER (person) and "Washington" as LOC (location).'),(0,r.kt)("h2",{id:"tagging-entities-with-our-best-model"},"Tagging entities with our best model\u200b"),(0,r.kt)("p",null,"Our best 4-class model is trained using a very large transformer. Use it if accuracy is the most important to you, and speed/memory not so much. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.data import Sentence\nfrom flair.nn import Classifier\n\n# make a sentence\nsentence = Sentence('George Washington went to Washington.')\n\n# load the NER tagger\ntagger = Classifier.load('ner-large')\n\n# run NER over sentence\ntagger.predict(sentence)\n\n# print the sentence with all annotations\nprint(sentence)\n")),(0,r.kt)("p",null,"As you can see, it's the same code, just with '",(0,r.kt)("strong",{parentName:"p"},"ner-large"),"' as model instead of '",(0,r.kt)("strong",{parentName:"p"},"ner"),"'.\nThis model also works with most languages. "),(0,r.kt)("p",null,":::hint\nIf you want the fastest model we ship, you can also try 'ner-fast'.\n:::"),(0,r.kt)("h2",{id:"tagging-entities-in-non-english-text"},"Tagging entities in non-English text"),(0,r.kt)("p",null,"We also have NER models for text in other languages. "),(0,r.kt)("h3",{id:"tagging-a-german-sentence"},"Tagging a German sentence"),(0,r.kt)("p",null,"To tag a German sentence, just load the appropriate model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n# load model\ntagger = Classifier.load('de-ner-large')\n\n# make German sentence\nsentence = Sentence('George Washington ging nach Washington.')\n\n# predict NER tags\ntagger.predict(sentence)\n\n# print sentence with predicted tags\nprint(sentence)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence: "George Washington ging nach Washington ." \u2192 ["George Washington"/PER, "Washington"/LOC]\n')),(0,r.kt)("h3",{id:"tagging-an-arabic-sentence"},"Tagging an Arabic sentence"),(0,r.kt)("p",null,"Flair also works for languages that write from right to left. To tag an Arabic sentence, just load the appropriate model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n# load model\ntagger = Classifier.load('ar-ner')\n\n# make Arabic sentence\nsentence = Sentence(\"\u0627\u062d\u0628 \u0628\u0631\u0644\u064a\u0646\")\n\n# predict NER tags\ntagger.predict(sentence)\n\n# print sentence with predicted tags\nprint(sentence)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence[2]: "\u0627\u062d\u0628 \u0628\u0631\u0644\u064a\u0646" \u2192 ["\u0628\u0631\u0644\u064a\u0646"/LOC]\n')),(0,r.kt)("h2",{id:"tagging-entities-with-18-classes"},"Tagging Entities with 18 Classes"),(0,r.kt)("p",null,"We also ship models that distinguish between more than just 4 classes. For instance, use our ontonotes models\nto classify 18 different types of entities. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.data import Sentence\nfrom flair.nn import Classifier\n\n# make a sentence\nsentence = Sentence('On September 1st George won 1 dollar while watching Game of Thrones.')\n\n# load the NER tagger\ntagger = Classifier.load('ner-ontonotes-large')\n\n# run NER over sentence\ntagger.predict(sentence)\n\n# print the sentence with all annotations\nprint(sentence)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence[13]: "On September 1st George won 1 dollar while watching Game of Thrones." \u2192 ["September 1st"/DATE, "George"/PERSON, "1 dollar"/MONEY, "Game of Thrones"/WORK_OF_ART]\n')),(0,r.kt)("p",null,'Finding for instance that "Game of Thrones" is a work of art and that "September 1st" is a date.'),(0,r.kt)("h2",{id:"biomedical-data"},"Biomedical Data"),(0,r.kt)("p",null,"For biomedical data, we offer the hunflair models that detect 5 different types of biomedical entities. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flair.data import Sentence\nfrom flair.nn import Classifier\n\n# make a sentence\nsentence = Sentence('Behavioral abnormalities in the Fmr1 KO2 Mouse Model of Fragile X Syndrome.')\n\n# load the NER tagger\ntagger = Classifier.load('bioner')\n\n# run NER over sentence\ntagger.predict(sentence)\n\n# print the sentence with all annotations\nprint(sentence)\n")),(0,r.kt)("p",null,"This should print:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},'Sentence[13]: "Behavioral abnormalities in the Fmr1 KO2 Mouse Model of Fragile X Syndrome." \u2192 ["Behavioral abnormalities"/Disease, "Fmr1"/Gene, "Mouse"/Species, "Fragile X Syndrome"/Disease]\n')),(0,r.kt)("p",null,'Thus finding entities of classes "Species", "Disease" and "Gene" in this text.'),(0,r.kt)("h2",{id:"list-of-ner-models"},"List of NER Models"),(0,r.kt)("p",null,"We end this section with a list of all models we currently ship with Flair. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"ID"),(0,r.kt)("th",{parentName:"tr",align:null},"Task"),(0,r.kt)("th",{parentName:"tr",align:null},"Language"),(0,r.kt)("th",{parentName:"tr",align:null},"Training Dataset"),(0,r.kt)("th",{parentName:"tr",align:null},"Accuracy"),(0,r.kt)("th",{parentName:"tr",align:null},"Contributor / Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english"},"ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"93.03")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english-fast"},"ner-fast"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"92.75")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},"(fast model)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english-large"},"ner-large"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English / Multilingual"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"94.09")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},"(large model)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'ner-pooled'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"93.24")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},"(memory inefficient)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english-ontonotes"},"ner-ontonotes"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (18-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Ontonotes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"89.06")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english-ontonotes-fast"},"ner-ontonotes-fast"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (18-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English"),(0,r.kt)("td",{parentName:"tr",align:null},"Ontonotes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"89.27")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},"(fast model)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-english-ontonotes-large"},"ner-ontonotes-large"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (18-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"English / Multilingual"),(0,r.kt)("td",{parentName:"tr",align:null},"Ontonotes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"90.93")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},"(large model)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/megantosh/flair-arabic-multi-ner"},"ar-ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Arabic"),(0,r.kt)("td",{parentName:"tr",align:null},"AQMAR & ANERcorp (curated)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"86.66")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-danish"},"da-ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Danish"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/alexandrainst/danlp"},"Danish NER dataset")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/AmaliePauli"},"AmaliePauli"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-german"},"de-ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"87.94")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-german-large"},"de-ner-large"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"German / Multilingual"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"92.31")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'de-ner-germeval'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},"Germeval"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"84.90")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-german-legal"},"de-ner-legal"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (legal text)"),(0,r.kt)("td",{parentName:"tr",align:null},"German"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/elenanereiss/Legal-Entity-Recognition"},"LER")," dataset"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"96.35")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-french"},"fr-ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"French"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/dice-group/FOX/tree/master/input/Wikiner"},"WikiNER (aij-wikiner-fr-wp3)")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"95.57")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mhham"},"mhham"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-spanish-large"},"es-ner-large"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Spanish"),(0,r.kt)("td",{parentName:"tr",align:null},"CoNLL-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"90.54")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/mhham"},"mhham"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-dutch"},"nl-ner"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Dutch"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL 2002")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"92.58")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/flair/ner-dutch-large"},"nl-ner-large"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Dutch"),(0,r.kt)("td",{parentName:"tr",align:null},"Conll-03"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"95.25")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'nl-ner-rnn'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Dutch"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.clips.uantwerpen.be/conll2002/ner/"},"CoNLL 2002")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"90.79")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"'",(0,r.kt)("a",{parentName:"td",href:"https://huggingface.co/dchaplinsky/flair-uk-ner"},"ner-ukrainian"),"'"),(0,r.kt)("td",{parentName:"tr",align:null},"NER (4-class)"),(0,r.kt)("td",{parentName:"tr",align:null},"Ukrainian"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/lang-uk/ner-uk"},"NER-UK dataset")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"86.05")," (F1)"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/dchaplinsky"},"dchaplinsky"))))),(0,r.kt)("p",null,"You choose which pre-trained model you load by passing the appropriate string to the ",(0,r.kt)("inlineCode",{parentName:"p"},"load()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Classifier")," class."),(0,r.kt)("p",null,"A full list of our current and community-contributed models can be browsed on the ",(0,r.kt)("a",{parentName:"p",href:"https://huggingface.co/models?library=flair&sort=downloads"},(0,r.kt)("strong",{parentName:"a"},"model hub")),"."))}m.isMDXComponent=!0}}]);